let list n = 
	let rec loop i ns = 
		if i >= n then ns
		else
			let v = Random.int 1000 in
			if (List.exists (fun n -> n = v) ns) then
				loop i ns
			else loop (i+1) (v::ns) in
	loop 0 [] 

let main () =	
	let ns1, ns2 = list 3, list 3 in
	let t1 = List.fold_left (fun t k -> 
		let _ = fprintf outch "env:newtest\t\n" in
		cons k t
		) Nil ns1 in
	let t2 = List.fold_left (fun t k -> 
		let _ = fprintf outch "env:newtest\t\n" in
		cons k t
		) Nil ns2 in	
	let _ = fprintf outch "env:newtest\t\n" in
	let t = merge t1 t2 in	
	let _ = List.fold_left (fun t _ -> 
		let _ = fprintf outch "env:newtest\t\n" in
		tail t
		) t (ns1 @ ns2) in
	()
let _ = main () 