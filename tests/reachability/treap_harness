let list n = 
	let rec loop i ns = 
		if i >= n then ns
		else
			let v = Random.int 1000 in
			if (List.exists (fun n -> n = v) ns) then
				loop i ns
			else loop (i+1) (v::ns) in
	loop 0 [] 

let main () =	
	let ns1 = list 25 in
	let ns2 = list 25 in
	let ns = List.map2 (fun x y -> (x, y)) ns1 ns2 in

	let t = Leaf in	
	let t = List.fold_left (fun t (k, p) -> 
		let _ = fprintf outch "env:newtest\t\n" in
		add t k p
		) t ns in
	let _ = List.fold_left (fun t (k, _) -> 
		let _ = fprintf outch "env:newtest\t\n" in
		delete t k
		) t ns in
	let _ = fprintf outch "env:newtest\t\n" in	
	let _ = find t 500 in
	let _ = fprintf outch "env:newtest\t\n" in	
	let _ = find t 0 in
	()
let _ = main () 